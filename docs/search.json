[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ben Deivide. Author, maintainer. Andre Barboza. Author. Alexandre Celestino. Contributor. Juliane Nassarala. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Deivide B, Barboza (2025). leem: Laboratory Teaching Statistics Mathematics. R package version 0.3.9000, https://github.com/bendeivide/leem, https://bendeivide.github.io/project/leem/.","code":"@Manual{,   title = {leem: Laboratory of Teaching to Statistics and Mathematics},   author = {Ben Deivide and Andre Barboza},   year = {2025},   note = {R package version 0.3.9000, https://github.com/bendeivide/leem},   url = {https://bendeivide.github.io/project/leem/}, }"},{"path":"/index.html","id":"leem-","dir":"","previous_headings":"","what":"Laboratory of Teaching to Statistics and Mathematics","title":"Laboratory of Teaching to Statistics and Mathematics","text":"Esse projeto tem por objetivo de criar uma interface gráfica ao usuário R, usando os pacotes tcltk e shiny. Tentaremos apresentar temas simples e complexos de forma interativa, para que o professor dessas área possam abordar o tema de modo mais facilmente. versão lançada CRAN está disponível, por enquanto, com interface em tcltk.","code":""},{"path":"/index.html","id":"instalação","dir":"","previous_headings":"","what":"Instalação","title":"Laboratory of Teaching to Statistics and Mathematics","text":"versão lançada pacote leem está disponível CRAN, e pode ser instalado com seguintes linhas de comando: E versão em desenvolvimento GitHub (Preferível) com:","code":"install.packages(\"leem\") # Instalar os pacotes dependentes pkgs <- c(\"manipulate\", \"tkRplotR\", \"tkrplot\", \"crayon\", \"diagram\") install.packages(pkgs) # install.packages(\"devtools\") devtools::install_github(\"bendeivide/leem\")"},{"path":"/index.html","id":"exemplos","dir":"","previous_headings":"","what":"Exemplos","title":"Laboratory of Teaching to Statistics and Mathematics","text":"","code":"library(leem) leem()"},{"path":"/index.html","id":"projetos-integrados","dir":"","previous_headings":"","what":"Projetos integrados","title":"Laboratory of Teaching to Statistics and Mathematics","text":"Temos dentro desse projetos, diversos projetos integrados, sendo: Projeto de dissertação PROFMAT/CAP/UFSJ (2020.1), da orientanda Juliane Nassaralla Almeida; Grupo de Iniciação Científica em Estatística/R Amanda Kelly Costa Lívia Dias de Sá Amorim Gustavo Remédios da Silva Paula Dailon Vinicius Barbosa de Fátima André Felipe Duarte Gonçalves Disciplina de Estatística Computacional (2022.1) Gustavo Duque T. M. Elias | Eng. Civil Ana Bárbara . Mól | Eng. Civil Ana Flávia M. M. Andrade | Eng. Civil Marco Antônio C. da Silva | Eng. Civil Disciplina de Estatística e Probabilidade (Eng. Mecatrônica/2022.2) Almir Novais | Eng. Mecatrônica Andre Barboza | Eng. Mecatrônica Nicholas de Carvalho | Eng. Mecatrônica Maria Fernanda de Oliveira | Eng. Mecatrônica Yuri Fonseca | Eng. Mecatrônica Iniciação Científica (2022.2) Rodrigo Ronchi | Eng. Química Iniciação Científica (2023.1) Andre Barboza | Eng. Mecatrônica","code":""},{"path":"/index.html","id":"propostas-da-gui","dir":"","previous_headings":"","what":"Propostas da GUI","title":"Laboratory of Teaching to Statistics and Mathematics","text":"GUI 1 (Proposta de Gustavo): https://www.figma.com/file/qYH2QntEZcVZDvq1ejp3W7/Untitled?node-id=0%3A1 GUI 2 (Proposta de Juliane): https://www.figma.com/proto/isRxuZbvduJe4bww0FvlTW/Untitled?node-id=7%3A18&scaling=min-zoom GUI 3 (Proposta de André Felipe): https://www.figma.com/proto/lapHIsabTlxt6NLO0Grsur/Untitled?node-id=13%3A582&scaling=contain&page-id=0%3A1 GUI 4 (Proposta de Dailon): Imagem De todo modo, já temos uma versão da GUI para o leem, que se inspirou nesses modelos iniciais!","code":""},{"path":"/reference/Gumbel_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"The Gumbel Distribution — Gumbel_distribution","title":"The Gumbel Distribution — Gumbel_distribution","text":"Density, distribution function, quantile function random generation normal distribution parameters: location scale","code":""},{"path":"/reference/Gumbel_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Gumbel Distribution — Gumbel_distribution","text":"","code":"dgumbel(x, location, scale)  pgumbel(q, location, scale, lower.tail = TRUE)  qgumbel(p, location = 0, scale = 1, lower.tail = TRUE)"},{"path":"/reference/Gumbel_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Gumbel Distribution — Gumbel_distribution","text":"x, q vector quantiles. location numerical. represents location parameter. See Details. scale numerical. represents scale parameter.  See Details. lower.tail logical; TRUE (default), probabilities \\(P[X \\leq x]\\) otherwise, \\(P[X > x]\\). p vector probabilities.","code":""},{"path":"/reference/Gumbel_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Gumbel Distribution — Gumbel_distribution","text":"CDF Gumbel distribution : $$    F(x;\\mu ,\\beta )=e^{-e^{-(x-\\mu )/\\beta }}, \\quad \\mu \\\\mathbf{R}, \\beta > 0, $$ \\(\\mu\\) location parameter (location) \\(\\beta\\) scale parameter (scale). PDF Gumbel distribution : $$    \\frac{1}{\\beta }e^{-(z+e^{-z})}, $$ \\(z={\\frac {x-\\mu }{\\beta }}\\). quantile : $$   \\mu -\\beta \\ln(-\\ln(p)), \\quad 0 < p < 1. $$","code":""},{"path":"/reference/Gumbel_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Gumbel Distribution — Gumbel_distribution","text":"","code":"# PDF dgumbel(1, 0, 1) #> [1] 0.2546464 # CDF pgumbel(1, 0, 1) #> [1] 0.6922006 # Quantile qgumbel(0.2, 0, 1) #> [1] -0.475885"},{"path":"/reference/P.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative distribution function — P","title":"Cumulative distribution function — P","text":"P Compute cumulative distribution function multiple distributions","code":""},{"path":"/reference/P.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative distribution function — P","text":"","code":"P(   q,   dist = \"normal\",   lower.tail = TRUE,   rounding = 5,   porcentage = FALSE,   gui = \"plot\",   main = NULL,   ... )"},{"path":"/reference/P.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative distribution function — P","text":"q quantile. q argument can length 1 2. See Details. dist distribution use. default 'normal'. Options: 'normal', 't-student', 'gumbel', 'binomial', 'poisson', .... lower.tail logical; TRUE (default), probabilities \\(P[X \\leq x]\\) otherwise, \\(P[X > x]\\). argument valid q length 1. rounding numerical; represents number decimals calculating probability. porcentage logical; FALSE (default), result decimal. Otherwise, probability given percentage. gui default 'plot'; graphically displays result probability. Others options : 'none', 'rstudio' 'tcltk'. main defalt NULL; represents title plot. ... additional arguments according chosen distribution.","code":""},{"path":"/reference/P.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative distribution function — P","text":"P returns probability graphical representation. result can given percentage .","code":""},{"path":"/reference/P.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative distribution function — P","text":"argument can length 2, use functions give us probability regions, given : %<X<%, %<=X<%, %<X<=%, %<=X<=%, %>X>%, %>X=>%, %>X=>% %>=X=>%. additional arguments represent parameters distributions, : dist = \"normal\" (Default); additional arguments : mean (\\(\\mu\\)) sd (\\(\\sigma\\)). PDF given : $$\\displaystyle{\\frac {1}{\\sqrt {2\\pi \\sigma ^{2}}}}e^{-{\\frac {(x-\\mu )^{2}}{2\\sigma ^{2}}}}, \\quad \\mu \\\\mathbb{R},~\\sigma^2 > 0;$$ dist = \"t-student\"; additional argument : df (\\(\\nu\\)). PDF given : $$\\displaystyle{\\frac {\\Gamma \\left({\\frac {\\ \\nu +1\\ }{2}}\\right)}{{\\sqrt {\\pi \\ \\nu \\ }}\\ \\Gamma \\left({\\frac {\\nu }{\\ 2\\ }}\\right)}}\\left(\\ 1+{\\frac {~x^{2}\\ }{\\nu }}\\ \\right)^{-{\\frac {\\ \\nu +1\\ }{2}}}, \\quad \\nu > 1;$$ dist = \"chisq\"; additional argument : df (\\(\\nu\\)). PDF given : $$\\displaystyle{\\frac {1}{2^{k/2}\\Gamma (k/2)}}\\;x^{k/2-1}e^{-x/2}, \\quad \\nu > 0;$$","code":""},{"path":"/reference/P.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative distribution function — P","text":"","code":"# Loading package library(leem) # Example 1 - Student's t distribution if (FALSE) { # \\dontrun{ P(q = 2, dist = \"t-student\", df = 10) P(q = 2, dist = \"t-student\", df = 10, gui = 'rstudio') P(q = 2, dist = \"t-student\", df = 10, gui = 'tcltk') P(-1 %<X<% 1, dist = \"t-student\", df = 10) } # } # Example 2 - Normal distribution P(-2,  dist = \"normal\", mean = 3, sd = 2,   main = expression(f(x) == (1 / sqrt(n * sigma^2)) *   exp(-1/2 * (x - mu)^2/sigma^2)))  #> [1] 0.00621"},{"path":"/reference/Q.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile distribution function. — Q","title":"Quantile distribution function. — Q","text":"Q Quantile function multiple distributions.","code":""},{"path":"/reference/Q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile distribution function. — Q","text":"","code":"Q(   p,   dist = \"normal\",   lower.tail = TRUE,   two.sided = FALSE,   rounding = 2,   gui = \"plot\",   mfrow = c(1, 2),   type = \"both\",   ... )"},{"path":"/reference/Q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile distribution function. — Q","text":"p probability. p argument need length 1 value lower 1. dist distribution use. default 'normal'. Options: 'normal', 't-student', 'gumbel', 'binomial', 'poisson', .... lower.tail logical; TRUE (default), quantile function computed; otherwise, complement quantile function (survival function) computed. lower.tail argument valid two-sided = FALSE. two.sided logical. TRUE (default), calculation quantile function survival presented; otherwise Q() function based according lower.tail argument. rounding numerical; represents number decimals calculating probability. gui default 'plot'; graphically displays result probability. Others options : \"plot\" \"rstudio\" \"tcltk\". mfrow numerical vector. Considering arguments two.sided = TRUE type = \"\", default present two graphs (based CDF PDF) horizontally quantile function, , mfrow = c(1, 2) (default). type character argument. default \"\"; output display two plots (based CDF PDF) present result Q(). options : \"cdf\" \"pdf\". ... additional parameters according chosen distribution.","code":""},{"path":"/reference/Q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile distribution function. — Q","text":"Q returns quantile graphical representation given distribution. output vector.","code":""},{"path":"/reference/Q.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quantile distribution function. — Q","text":"expression quantile function given : $$ Q(p)=\\inf {x\\\\mathbb{R}: p \\le F(x)}, $$ p first argument Q() x return value;","code":""},{"path":"/reference/Q.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile distribution function. — Q","text":"","code":"# Attaching package library(leem) if (FALSE) { # \\dontrun{ Q(p = 0.8, dist = \"normal\", mean = 200, sd=30) } # }"},{"path":"/reference/Regions_of_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Regions of probability — Regions_of_probability","title":"Regions of probability — Regions_of_probability","text":"binary operators return vector length 2, describing desired probability region.","code":""},{"path":"/reference/Regions_of_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regions of probability — Regions_of_probability","text":"","code":"a %>x>% b  a %>X>% b  a %<X<% b  a %<x<% b  a %>=X>=% b  a %>=x>=% b  a %<=X<=% b  a %<=x<=% b  a %>=X>% b  a %>=x>% b  a %>X>=% b  a %>x>=% b  a %<=X<% b  a %<=x<% b  a %<X<=% b  a %<x<=% b"},{"path":"/reference/Regions_of_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regions of probability — Regions_of_probability","text":"scalar. referring discrete random variable, use syntax \"L\" number. b scalar. referring discrete random variable, use syntax \"L\" number.","code":""},{"path":"/reference/Regions_of_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regions of probability — Regions_of_probability","text":"vector lenght 2.","code":""},{"path":"/reference/Regions_of_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regions of probability — Regions_of_probability","text":"","code":"# Example 1 - Discrete 2L %>x>% 5L #> [1] 1 6 2L %>X>% 5L #> [1] 1 6 2L %<X<% 5L #> [1] 3 4 2L %<x<% 5L #> [1] 3 4 2L %>=X>=% 5L #> [1] 2 5 2L %>=x>=% 5L #> [1] 2 5 2L %<=X<=% 5L #> [1] 2 5 2L %<=x<=% 5L #> [1] 2 5 2L %>=X>% 5L #> [1] 2 6 2L %>=x>% 5L #> [1] 2 6 2L %>x>=% 5L #> [1] 1 5 2L %>X>=% 5L #> [1] 1 5 2L %<=X<% 5L #> [1] 2 4 2L %<=x<% 5L #> [1] 2 4 2L %<X<=% 5L #> [1] 3 5 2L %<x<=% 5L #> [1] 3 5  # Example 2 - Continuous 2 %>x>% 5 #> [1] 2 5 2 %>X>% 5 #> [1] 2 5 2 %<X<% 5 #> [1] 2 5 2 %<x<% 5 #> [1] 2 5 2 %>=X>=% 5 #> [1] 2 5 2 %>=x>=% 5 #> [1] 2 5 2 %<=X<=% 5 #> [1] 2 5 2 %<=x<=% 5 #> [1] 2 5 2 %>=X>% 5 #> [1] 2 5 2 %>=x>% 5 #> [1] 2 5 2 %>x>=% 5 #> [1] 2 5 2 %>X>=% 5 #> [1] 2 5 2 %<=X<% 5 #> [1] 2 5 2 %<=x<% 5 #> [1] 2 5 2 %<X<=% 5 #> [1] 2 5 2 %<x<=% 5 #> [1] 2 5"},{"path":"/reference/amplitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Amplitude — amplitude","title":"Amplitude — amplitude","text":"Compute sample range","code":""},{"path":"/reference/amplitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amplitude — amplitude","text":"","code":"amplitude(x, rounding = 2, na.rm = FALSE, details = FALSE, grouped = TRUE)"},{"path":"/reference/amplitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amplitude — amplitude","text":"x R object (list) class leem. Use new_leem() function. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). na.rm logical value indicating whether NA values stripped computation proceeds. details Logical object. Details data (default FALSE). grouped Logical object. Determines whether measure position result based grouped data (default TRUE).","code":""},{"path":"/reference/amplitude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Amplitude — amplitude","text":"","code":"# Example 1: Poisson data set.seed(10) rpois(30, 2.5) |>   new_leem() |>   amplitude(grouped = FALSE) #> [1] 4 # Example 2: Normal data rnorm(50, 100, 2.5) |>   new_leem(variable = 2) |>   amplitude() #> [1] 10.8"},{"path":"/reference/apf.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of probability function of any discrete variable — apf","title":"Plot of probability function of any discrete variable — apf","text":"Help building plot probability function discrete variable","code":""},{"path":"/reference/apf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of probability function of any discrete variable — apf","text":"","code":"apf(x, p, main = NULL, xlab = NULL, ylab = NULL)"},{"path":"/reference/apf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of probability function of any discrete variable — apf","text":"x numeric vector values \\(X\\). See Details. p numeric vector \\(p_X(x)\\). See Details. main main title plot. xlab label x axis. ylab label y axis.","code":""},{"path":"/reference/apf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of probability function of any discrete variable — apf","text":"output plot distribution function. See Example 1.","code":""},{"path":"/reference/apf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of probability function of any discrete variable — apf","text":"Consider \\(X\\) distribution: \\(p_X(x)\\) \\(x\\) probability function values \\(X\\). See Example 1.","code":""},{"path":"/reference/apf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of probability function of any discrete variable — apf","text":"","code":"# Example 1 x <- 1:5 p <- c(0.23, 0.27,0.30, 0.12, 0.08) apf(x, p)"},{"path":"/reference/barplot.leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot graph — barplot.leem","title":"Barplot graph — barplot.leem","text":"Class method leem generic barplot","code":""},{"path":"/reference/barplot.leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot graph — barplot.leem","text":"","code":"# S3 method for class 'leem' barplot(   height,   freq = \"a\",   bg = TRUE,   main = NULL,   xlab = NULL,   ylab = NULL,   grids = grid(col = \"white\"),   bgcol = \"gray\",   bgborder = NA,   barcol = \"yellow\",   barborder = \"gray\",   posx1 = 0,   posx2 = 0,   xang = 0,   labels = NULL,   ... )"},{"path":"/reference/barplot.leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot graph — barplot.leem","text":"height R object (list) class leem. Use new_leem() function. freq Character argument. Type frequency options: \"\" (absolute default), \"r\" relative \"p\" percentage. bg Logical argument. Default TRUE, displays background, bg = FALSE otherwise. main Character argument. Insert plot title.  default NULL. xlab Character argument. Insert title x-axis graphic label. default NULL. ylab Character argument. Insert title y-axis graphic label. default NULL. grids Insert grids plot. default grid(col = \"white\"). bgcol Insert background color. argument valid bg = TRUE. default bgcol=\"gray\". bgborder Character argument. Insert background border color. argument valid bg = TRUE. default bgborder = NA. barcol Character argument. Insert barplot color. default barcol = \"yellow\". argument valid bars = TRUE. barborder Numeric argument. Insert barplot border color. argument valid bars = TRUE. default barborder = \"gray\". posx1 Numeric argument.Distance labels (horizontal) relation x axis. posx2 Numeric argument.Distance labels (vertical) relation x axis. xang Numeric argument.Angle labels relation x axis labels Character argument. Labels name vector. ... arguments passed methods.","code":""},{"path":"/reference/barplot.leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot graph — barplot.leem","text":"","code":"library(graphics) # Example 1 - Simple example library(leem) rep(1:5, 5:1) |>   new_leem() |>   barplot()  # Example 2 - Color bars rep(1:5, 5:1) |>   new_leem() |>   barplot(barcol = heat.colors(5))  # Example 3 - Ordered data library(leem) school <- rep(c(\"high\", \"university\", \"basic\"), 3:5) sample(school, 30, TRUE) |>  new_leem() |>  tabfreq(ordered = c(\"basic\", \"high\", \"university\")) |>  barplot(xang = 15, posx2 = -0.2)  # Example 4 - Coerced to histogram rnorm(100, 10, 2) |>   new_leem(variable = 2) |>   barplot(barcol = heat.colors(10)) #> Warning: Coerced to histogram!"},{"path":"/reference/boxplot.leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Box plot — boxplot.leem","title":"Box plot — boxplot.leem","text":"Produce box--whisker plot(s) leem class object computes necessary values development plot.","code":""},{"path":"/reference/boxplot.leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box plot — boxplot.leem","text":"","code":"# S3 method for class 'leem' boxplot(   x,   type = \"rawdata\",   details = FALSE,   horizontal = FALSE,   coef = 1.5,   main = NULL,   xlab = NULL,   ylab = NULL,   col = rgb(0, 175, 239, maxColorValue = 255),   ... )"},{"path":"/reference/boxplot.leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box plot — boxplot.leem","text":"x R object (list) class leem. Use new_leem() function. type character argument. Default rawdata. type = \"classes\", function returns boxplot plot set data grouped classes x object. details Logical argument. Default FALSE, otherwise, addition plot, measurements necessary development plot displayed console. horizontal Logical argument indicating boxplots horizontal; default FALSE means vertical boxes. coef determines far plot whiskers extend box. coef positive, whiskers extend extreme data point coef times interquartile range box. value zero causes whiskers extend data extremes. main Title name. Defaults NULL. xlab label x axis. Defaults NULL. ylab label y axis. Defaults NULL. col Character vector. Default col = rgb(0, 175, 239, maxColorValue = 255). ... arguments passed methods.","code":""},{"path":"/reference/boxplot.leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box plot — boxplot.leem","text":"","code":"library(leem) # Example 1 x <- rnorm(30, 100, 2) |>   new_leem(variable = 2) |>   tabfreq() boxplot(x, details = TRUE)  #> $stats #> [1]  96.08133  98.94260 100.28825 100.96633 103.47796 #>  #> $n #> [1] 30 #>  #> $conf #> [1]  99.70447 100.87203 #>  #> $out #> [1] 107.1251 #>  #> $iqr #> [1] 2.02373 #>  #> $min #> [1] 96.08133 #>  #> $max #> [1] 99.03548 #>  #> $mean #> [1] 100.16 #>  # Example 2 boxplot(x, type = \"classes\")"},{"path":"/reference/cdfd.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of cumulative distribution function of any discrete variable — cdfd","title":"Plot of cumulative distribution function of any discrete variable — cdfd","text":"Help building plot cumulative distribution function discrete variable","code":""},{"path":"/reference/cdfd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of cumulative distribution function of any discrete variable — cdfd","text":"","code":"cdfd(x, fda, main = NULL, xlab = NULL, ylab = NULL)"},{"path":"/reference/cdfd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of cumulative distribution function of any discrete variable — cdfd","text":"x numeric vector values \\(X\\). See Details. fda numeric vector \\(F_X(x)\\). See Details. main main title plot. xlab label x axis. ylab label y axis.","code":""},{"path":"/reference/cdfd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of cumulative distribution function of any discrete variable — cdfd","text":"output plot distribution function. See Example 1.","code":""},{"path":"/reference/cdfd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of cumulative distribution function of any discrete variable — cdfd","text":"Consider \\(X\\) distribution: \\(p_X(x)\\) \\(x\\) probability function values \\(X\\). Consider also \\(X\\) distribution function: $$ F_X(x) = \\left\\{\\begin{array}{ll} 0, & \\textrm{} x < 1;\\\\ 0.23, & \\textrm{} 1 \\leq x < 2;\\\\ 0.50, & \\textrm{} 2 \\leq x < 3;\\\\ 0.80, & \\textrm{} 3 \\leq x < 4;\\\\ 0.92, & \\textrm{} 4 \\leq x < 5;\\\\ 1.00 & \\textrm{} x \\geq 5.\\\\ \\end{array}\\right. $$ way, cdfd function  needs consider vectors x <- 1:5 fda <- c(0.23, 0.50, 0.80, 0.92, 1), , equality conditions \\(x\\). See Example 1.","code":""},{"path":"/reference/cdfd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of cumulative distribution function of any discrete variable — cdfd","text":"","code":"# Example 1 x <- 1:5 fda <- c(0.23, 0.5, 0.8, 0.92, 1) cdfd(x, fda)"},{"path":"/reference/cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Coefficient of variation — cv","title":"Coefficient of variation — cv","text":"Compute sample coeffient variation","code":""},{"path":"/reference/cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coefficient of variation — cv","text":"","code":"cv(x, rounding = 2, na.rm = FALSE, details = FALSE, grouped = TRUE)"},{"path":"/reference/cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coefficient of variation — cv","text":"x R object (list) class leem. Use new_leem() function. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). na.rm logical value indicating whether NA values stripped computation proceeds. details Logical object. Details data (default FALSE). grouped Logical object. Determines whether measure position result based grouped data (default TRUE).","code":""},{"path":"/reference/cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coefficient of variation — cv","text":"","code":"# Example 1: Poisson data rpois(30, 2.5) |>   new_leem() |>   cv() #> [1] 76.25 # Example 2: Normal data rnorm(50, 100, 2.5) |>   new_leem(variable = 2) |>   cv(grouped = FALSE) #> [1] 3.2"},{"path":"/reference/hist.leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram graph — hist.leem","title":"Histogram graph — hist.leem","text":"Class method leem generic hist","code":""},{"path":"/reference/hist.leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram graph — hist.leem","text":"","code":"# S3 method for class 'leem' hist(   x,   freq = \"a\",   bg = TRUE,   main = NULL,   xlab = NULL,   ylab = NULL,   grids = grid(col = \"white\"),   bgcol = \"gray\",   bgborder = NA,   barcol = \"yellow\",   barborder = \"gray\",   ... )"},{"path":"/reference/hist.leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram graph — hist.leem","text":"x R object (list) class leem. Use new_leem() function. freq Character argument. Type frequency options: \"\" (absolute default), \"r\" relative \"p\" percentage. bg Logical argument. Default TRUE, displays background, bg = FALSE otherwise. main Insert plot title.  default NULL. xlab Insert title x-axis graphic label. default NULL. ylab Insert title y-axis graphic label. default NULL. grids Insert grids plot. default grid(col = \"white\"). bgcol Insert background color. argument valid bg = TRUE. default bgcol=\"gray\". bgborder Insert background border color. argument valid bg = TRUE. default bgborder = NA. barcol Insert barplot color. default barcol = \"yellow\". argument valid bars = TRUE. barborder Numeric argument. Insert barplot border color. argument valid bars = TRUE. default barborder = \"gray\". ... arguments passed methods.","code":""},{"path":"/reference/hist.leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram graph — hist.leem","text":"","code":"# Example 1 library(leem) rnorm(36, 100, 50) |> new_leem(variable = \"continuous\") |> tabfreq() |> hist()   # Example 2 library(leem) school <- rep(c(\"high\", \"university\", \"basic\"), 3:5) sample(school, 30, TRUE) |>  new_leem() |>  tabfreq(ordered = c(\"basic\", \"high\", \"university\")) #>  #> Table of frequency  #> Type of variable: discrete #>  #>       Groups Fi   Fr Fac1 Fac2 Fp  Fac1p  Fac2p #> 1      basic 12 0.40   12   30 40  40.00 100.00 #> 2       high 10 0.33   22   18 33  73.33  60.00 #> 3 university  8 0.27   30    8 27 100.00  26.67 #> ==============================================  #> Groups: Discretized grouping  #> Fi: Absolute frequency  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>"},{"path":"/reference/insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert measures of position in plot — insert","title":"Insert measures of position in plot — insert","text":"Generic function allows inserting measures position plots","code":""},{"path":"/reference/insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert measures of position in plot — insert","text":"","code":"insert(x, ...)"},{"path":"/reference/insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert measures of position in plot — insert","text":"x R object (list) class leem. Use new_leem() function. ... arguments passed methods.","code":""},{"path":"/reference/insert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert measures of position in plot — insert","text":"","code":"# Example 1 library(leem) set.seed(10) rnorm(36, 100, 50) |>  new_leem(variable = \"continuous\") |>  tabfreq() |>  hist() |>  insert(   lcol = \"black\",   tcol = \"purple\",   acol = \"brown\",   parrow = 0.6,   larrow = 0.6,   ptext = 0.4,   side = \"left\",   lwd = 2,   lwdarrow = 4  )"},{"path":"/reference/insert.leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert measures of position in plot — insert.leem","title":"Insert measures of position in plot — insert.leem","text":"Method insert function","code":""},{"path":"/reference/insert.leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert measures of position in plot — insert.leem","text":"","code":"# S3 method for class 'leem' insert(   x,   type = \"mean\",   lty = 1,   lcol = \"black\",   tcol = lcol,   acol = lcol,   parrow = 0.5,   larrow = 0.6,   ptext = 0.06,   side = \"right\",   lwd = 2,   lwdarrow = lwd,   ... )"},{"path":"/reference/insert.leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert measures of position in plot — insert.leem","text":"x R object (list) class leem. Use new_leem() function. type Type measure position. default type = \"mean\". options: \"median\", \"mode\" \"\". lty Line type. default  lty = 1. lcol Vertical line color type. default lpcol = \"black\". argument must length type argument. tcol Text color type. default tcol = lcol. acol Arrow color type. default acol = lcol. parrow Text arrow height. default parrow = 0.5. argument must length type argument. larrow Text arrow length. default larrow = 0.6. ptext Distance lines text. default ptext = 0.06. side Side insert text. default side = \"right\". argument must length type argument. lwd numeric argument. vertical line width. default  lwd = 2. lwdarrow numeric argument. arrow width. default  lwdarrow = lwd. ... arguments passed methods.","code":""},{"path":"/reference/insert.leem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert measures of position in plot — insert.leem","text":"return value. function adds elements existing plot.","code":""},{"path":"/reference/insert.leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert measures of position in plot — insert.leem","text":"","code":"# Example 1 library(leem) set.seed(10) rnorm(36, 100, 50) |>  new_leem(variable = \"continuous\") |>  tabfreq() |>  hist() |>  insert(   lcol = \"black\",   tcol = \"purple\",   acol = \"brown\",   parrow = 0.6,   larrow = 0.6,   ptext = 0.4,   side = \"left\",   lwd = 2,   lwdarrow = 4  )"},{"path":"/reference/leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical User Interface for leem package — leem","title":"Graphical User Interface for leem package — leem","text":"leem Graphical User Interface (GUI) leem package","code":""},{"path":"/reference/leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical User Interface for leem package — leem","text":"","code":"leem(gui = TRUE)"},{"path":"/reference/leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical User Interface for leem package — leem","text":"gui Logical argument, TRUE FALSE. default TRUE","code":""},{"path":"/reference/leem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical User Interface for leem package — leem","text":"leem presents GUI various problems teaching statistics mathematics. idea use package learn subjects without necessarily programming R","code":""},{"path":"/reference/leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical User Interface for leem package — leem","text":"","code":"# Loading package library(leem) if (interactive()) {   leem(gui = FALSE) }"},{"path":"/reference/madev.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean absolute deviation — madev","title":"Mean absolute deviation — madev","text":"Compute sample mean absolute deviation","code":""},{"path":"/reference/madev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean absolute deviation — madev","text":"","code":"madev(x, rounding = 2, na.rm = FALSE, details = FALSE, grouped = TRUE)"},{"path":"/reference/madev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean absolute deviation — madev","text":"x R object (list) class leem. Use new_leem() function. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). na.rm logical value indicating whether NA values stripped computation proceeds. details Logical object. Details data (default FALSE). grouped Logical object. Determines whether measure position result based grouped data (default TRUE).","code":""},{"path":"/reference/madev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean absolute deviation — madev","text":"","code":"# Example 1: Poisson data set.seed(10) rpois(30, 2.5) |>   new_leem() |>   madev(grouped = FALSE) #> [1] 27.62 # Example 2: Normal data rnorm(50, 100, 2.5) |>   new_leem(variable = 2) |>   madev() #> [1] 97.56"},{"path":"/reference/mean.leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic mean Class method leem for the generic mean function — mean.leem","title":"Arithmetic mean Class method leem for the generic mean function — mean.leem","text":"Arithmetic mean Class method leem generic mean function","code":""},{"path":"/reference/mean.leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic mean Class method leem for the generic mean function — mean.leem","text":"","code":"# S3 method for class 'leem' mean(   x,   trim = 0,   na.rm = FALSE,   rounding = 2,   grouped = TRUE,   details = FALSE,   ... )"},{"path":"/reference/mean.leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic mean Class method leem for the generic mean function — mean.leem","text":"x R object (list) class leem. Use new_leem() function. Complex vectors allowed trim = 0, . trim fraction (0 0.5) observations trimmed end x mean computed. Values trim outside range taken nearest endpoint. na.rm logical value indicating whether NA values stripped computation proceeds. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). grouped Logical object. Determines whether measure position result based grouped data (default TRUE). details Logical object. Details data (default FALSE). ... arguments passed methods.","code":""},{"path":"/reference/mean.leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arithmetic mean Class method leem for the generic mean function — mean.leem","text":"","code":"# Example 1 set.seed(10) x <- rnorm(36, 100, 50) y <- rbinom(36, 10, 0.8) y |> new_leem(variable = \"discrete\") |> tabfreq() |> mean() #> [1] 8.14 x |> new_leem(variable = \"continuous\") |> tabfreq() |> mean() #> [1] 78.39"},{"path":"/reference/medev.html","id":null,"dir":"Reference","previous_headings":"","what":"Median absolute deviation — medev","title":"Median absolute deviation — medev","text":"Compute sample median absolute deviation","code":""},{"path":"/reference/medev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median absolute deviation — medev","text":"","code":"medev(x, rounding = 2, na.rm = FALSE, details = FALSE, grouped = TRUE)"},{"path":"/reference/medev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median absolute deviation — medev","text":"x R object (list) class leem. Use new_leem() function. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). na.rm logical value indicating whether NA values stripped computation proceeds. details Logical object. Details data (default FALSE). grouped Logical object. Determines whether measure position result based grouped data (default TRUE).","code":""},{"path":"/reference/medev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median absolute deviation — medev","text":"","code":"# Example 1: Poisson data set.seed(10) rpois(30, 2.5) |>   new_leem() |>   medev(grouped = FALSE) #> [1] 26 # Example 2: Normal data rnorm(50, 100, 2.5) |>   new_leem(variable = 2) |>   medev() #> [1] 97.92"},{"path":"/reference/median.leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Median value — median.leem","title":"Median value — median.leem","text":"Class method leem generic median function","code":""},{"path":"/reference/median.leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median value — median.leem","text":"","code":"# S3 method for class 'leem' median(x, na.rm = FALSE, rounding = 2, grouped = TRUE, details = FALSE, ...)"},{"path":"/reference/median.leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median value — median.leem","text":"x R object (list) class leem. Use new_leem() function. na.rm logical value indicating whether NA values stripped computation proceeds. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). grouped Logical object. Determines whether measure position result based grouped data (default TRUE). details Logical object. Details data (default FALSE). ... arguments passed methods.","code":""},{"path":"/reference/median.leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median value — median.leem","text":"","code":"library(leem) library(stats) # Examples rnorm(36, 100, 50) |> new_leem(variable = 2) |> tabfreq() |> median() #> [1] 106.84"},{"path":"/reference/mfreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Mode value — mfreq","title":"Mode value — mfreq","text":"Compute sample mode.","code":""},{"path":"/reference/mfreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mode value — mfreq","text":"","code":"mfreq(x, na.rm = FALSE, rounding = 2, grouped = TRUE, details = FALSE)"},{"path":"/reference/mfreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mode value — mfreq","text":"x R object (list) class leem. Use new_leem() function. na.rm logical value indicating whether NA values stripped computation proceeds. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). grouped Logical object. Determines whether measure position result based grouped data (default TRUE). details Logical object. Details data (default FALSE).","code":""},{"path":"/reference/mfreq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mode value — mfreq","text":"","code":"library(leem) # set.seed(10) x <- rnorm(36, 100, 50) set.seed(10) y <- rbinom(36, 10, 0.8) w <- rep(letters[1:4], 1:4) (tab1 <- y |> new_leem(variable = \"discrete\") |> tabfreq()) #>  #> Table of frequency  #> Type of variable: discrete #>  #>   Groups Fi   Fr Fac1 Fac2 Fp  Fac1p  Fac2p #> 1      6  1 0.03    1   36  3   2.78 100.00 #> 2      7  8 0.22    9   35 22  25.00  97.22 #> 3      8 13 0.36   22   27 36  61.11  75.00 #> 4      9 11 0.31   33   14 31  91.67  38.89 #> 5     10  3 0.08   36    3  8 100.00   8.33 #> ==============================================  #> Groups: Discretized grouping  #> Fi: Absolute frequency  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>  (tab2 <- x |> new_leem(variable = \"continuous\") |> tabfreq()) #>  #> Table of frequency  #> Type of variable: continuous #>  #>               Classes Fi     PM   Fr Fac1 Fac2 Fp  Fac1p  Fac2p #> 1  -16.97 |---  17.29  2   0.16 0.06    2   36  6   5.56 100.00 #> 2   17.29 |---  51.55  6  34.42 0.17    8   34 17  22.22  94.44 #> 3   51.55 |---  85.81  8  68.68 0.22   16   28 22  44.44  77.78 #> 4  85.81 |---  120.07  4 102.94 0.11   20   20 11  55.56  55.56 #> 5 120.07 |---  154.33 12 137.20 0.33   32   16 33  88.89  44.44 #> 6 154.33 |---  188.59  4 171.46 0.11   36    4 11 100.00  11.11 #>  #> ==============================================  #> Classes: Grouping of classes  #> Fi: Absolute frequency  #> PM: Midpoint  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>  (tab3 <- w |> new_leem(variable = \"discrete\") |> tabfreq()) #>  #> Table of frequency  #> Type of variable: discrete #>  #>   Groups Fi  Fr Fac1 Fac2 Fp Fac1p Fac2p #> 1      a  1 0.1    1   10 10    10   100 #> 2      b  2 0.2    3    9 20    30    90 #> 3      c  3 0.3    6    7 30    60    70 #> 4      d  4 0.4   10    4 40   100    40 #> ==============================================  #> Groups: Discretized grouping  #> Fi: Absolute frequency  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>  y |> new_leem(variable = \"discrete\") |> tabfreq() |> mfreq() #> [1] 8 x |> new_leem(variable = \"continuous\") |> tabfreq() |> mfreq() #> [1] 137.2 w |> new_leem(variable = \"discrete\") |> tabfreq() |> mfreq() #> [1] \"d\""},{"path":"/reference/mpos.html","id":null,"dir":"Reference","previous_headings":"","what":"Measures of position — mpos","title":"Measures of position — mpos","text":"Compute measures position","code":""},{"path":"/reference/mpos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Measures of position — mpos","text":"","code":"mpos(   x,   trim = 0,   na.rm = FALSE,   rounding = 2,   grouped = TRUE,   details = FALSE,   ... )"},{"path":"/reference/mpos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Measures of position — mpos","text":"x R object (list) class leem. Use new_leem() function. Complex vectors allowed trim = 0, . trim fraction (0 0.5) observations trimmed end x mean computed. Values trim outside range taken nearest endpoint. na.rm logical value indicating whether NA values stripped computation proceeds. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). grouped Logical object. Determines whether measure position result based grouped data (default TRUE). details Logical object. Details data (default FALSE). ... arguments passed methods.","code":""},{"path":"/reference/mpos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Measures of position — mpos","text":"measures position : average, median mode.","code":""},{"path":"/reference/mpos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Measures of position — mpos","text":"","code":"# Example 1: Poisson data rpois(30, 2.5) |>   new_leem() |>   mpos() #> $average #> [1] 2.1 #>  #> $median #> [1] 2 #>  #> $mode #> [1] 2 #>  # Example 2: Normal data rnorm(50, 100, 2.5) |>   new_leem(variable = 2) |>   mpos(grouped = FALSE) #> $average #> [1] 99.71 #>  #> $median #> [1] 99.35 #>  #> $mode #> [1] \"The data set has no mode!\" #>"},{"path":"/reference/mstde.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean standard error — mstde","title":"Mean standard error — mstde","text":"Compute sample mean standard error","code":""},{"path":"/reference/mstde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean standard error — mstde","text":"","code":"mstde(x, rounding = 2, na.rm = FALSE, details = FALSE, grouped = TRUE)"},{"path":"/reference/mstde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean standard error — mstde","text":"x R object (list) class leem. Use new_leem() function. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). na.rm logical value indicating whether NA values stripped computation proceeds. details Logical object. Details data (default FALSE). grouped Logical object. Determines whether measure position result based grouped data (default TRUE).","code":""},{"path":"/reference/mstde.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean standard error — mstde","text":"","code":"# Example 1: Poisson data set.seed(10) rpois(30, 2.5) |>   new_leem() |>   mstde(rounding = 4) #> [1] 0.203 # Example 2: Normal data rnorm(50, 100, 2.5) |>   new_leem(variable = 2) |>   mstde(grouped = FALSE) #> [1] 0.33"},{"path":"/reference/new_leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor of object of leem class — new_leem","title":"Constructor of object of leem class — new_leem","text":"Function assists functions leem package","code":""},{"path":"/reference/new_leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor of object of leem class — new_leem","text":"","code":"new_leem(x, variable = \"discrete\")"},{"path":"/reference/new_leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor of object of leem class — new_leem","text":"x R object (vector data structure). variable Type data. discrete (default), data categorical (numeric ). continuous, data numeric.","code":""},{"path":"/reference/new_leem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor of object of leem class — new_leem","text":"variable argument also allows using variable = 1 categorical variable variable = 2 continuous variable.","code":""},{"path":"/reference/new_leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor of object of leem class — new_leem","text":"","code":"# Example 1 library(leem) x <- rbinom(36, 10, 0.6) new_leem(x, variable = 1) #>  [1] 4 8 5 7 7 7 5 4 8 6 5 7 8 4 8 5 6 6 8 4 4 7 8 8 7 7 8 7 4 8 5 6 6 6 5 7  # Example 2 (Pipe operator) rnorm(36, 100, 4) |> new_leem(variable = 2) #>  [1] 102.86640 101.76097 100.63532 102.63906 108.88208  95.26422  99.70418 #>  [8]  98.33458  99.23407 100.27818 104.62139 102.37983  94.32142  93.57329 #> [15] 103.57170 100.59267 104.90811  96.95278 101.67750  95.84023 102.84630 #> [22]  97.46715 102.25270 102.64395  93.36780 104.11267 104.51181  94.87938 #> [29] 104.51547  98.14346  98.73696 103.69717 100.30858 104.15969 102.96754 #> [36] 105.02218"},{"path":"/reference/ogive.html","id":null,"dir":"Reference","previous_headings":"","what":"Ogive chart — ogive","title":"Ogive chart — ogive","text":"Generic function plots culmulative frequency curve.","code":""},{"path":"/reference/ogive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ogive chart — ogive","text":"","code":"ogive(x, ...)  # S3 method for class 'leem' ogive(   x,   freq = \"a\",   decreasing = FALSE,   both = FALSE,   bars = FALSE,   histogram = FALSE,   bg = TRUE,   main = NULL,   xlab = NULL,   ylab = NULL,   grids = grid(col = \"white\"),   bgcol = \"gray\",   bgborder = NA,   barcol = \"yellow\",   histcol = barcol,   barborder = \"gray\",   histborder = barborder,   type = \"b\",   lpcol = \"black\",   lwd = 2,   pch = 19,   lty = 2,   ... )"},{"path":"/reference/ogive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ogive chart — ogive","text":"x R object (list) class leem. Use new_leem() function. ... arguments passed methods. freq Character argument. Type frequency options: \"\" (absolute default), \"r\" relative \"p\" percentage. decreasing Logical argument. Default FALSE. decreasing = FALSE, represents \"ogive larger \", decreasing = TRUE, represents \"ogive less \". Logical argument. Default FALSE. = TRUE, o plotted. = FALSE otherside. bars Logical argument. Default FALSE. bars = TRUE, bars accumulated frequency inserted plot, according decreasing argument. bars = FALSE otherside. histogram Logical argument. Default FALSE. histogram = TRUE, histogram inserted plot. bg Logical argument. Default TRUE, displays background, bg = FALSE otherwise. main Insert plot title. default NULL. xlab Insert title x-axis graphic label. default NULL. ylab Insert title y-axis graphic label. default NULL. grids Insert grids plot. default grid(col = \"white\"). bgcol Insert background color. argument valid bg = TRUE. default bgcol=\"gray\". bgborder Insert background border color. argument valid bg = TRUE. default bgborder = NA. barcol Insert barplot color. default barcol = \"yellow\". argument valid bars = TRUE. histcol Insert histogram color. default histcol = barcol. argument valid histogram = TRUE. barborder Insert barplot border color. argument valid bars = TRUE. default barborder = \"gray\". histborder Insert histogram border color. argument valid histogram = TRUE. default histborder = barborder. type Type plot. default type = \"b\", .e., line points. See graphical parameter details. lpcol Type line color. default lpcol = \"black\". lwd numeric argument. line width. default  lwd = 2. pch Type point. default  pch = 19. lty Type line. default  lty = 2.","code":""},{"path":"/reference/ogive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ogive chart — ogive","text":"Ogive plot.","code":""},{"path":"/reference/ogive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ogive chart — ogive","text":"","code":"library(leem) # Example 1 - Both ogives rnorm(36, 100, 50) |> new_leem(variable = 2) |> tabfreq() |> ogive(both = TRUE)   # Example 2 - Insert barplot rnorm(36, 100, 50) |> new_leem(variable = 2) |> tabfreq() |> ogive(both = TRUE, bars = TRUE)  # Example 3 - Insert histogram rnorm(36, 100, 50) |> new_leem(variable = 2) |> tabfreq() |> ogive(both = TRUE, histogram = TRUE)"},{"path":"/reference/piechart.html","id":null,"dir":"Reference","previous_headings":"","what":"Pie Chart — piechart","title":"Pie Chart — piechart","text":"Draw pie chart.","code":""},{"path":"/reference/piechart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pie Chart — piechart","text":"","code":"piechart(   x,   labels = NULL,   col = heat.colors(5, 1),   border = FALSE,   main = NULL,   ... )"},{"path":"/reference/piechart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pie Chart — piechart","text":"x R object (list) class leem. Use new_leem() function. labels One expressions character strings giving names slices col Character vector. Default col = heat.colors(5). border Logical argument (default FALSE). main Title name. ... arguments passed methods.","code":""},{"path":"/reference/piechart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pie Chart — piechart","text":"","code":"library(leem) # Example 1 school <- rep(c(\"high\", \"university\", \"basic\"), 3:5) x <- sample(school, 30, TRUE) |>   new_leem() |>   tabfreq(ordered = c(\"basic\", \"high\", \"university\")) # Example 2 x <- rbinom(36, 10, 0.6) x <- new_leem(x, variable = \"discrete\") x <- tabfreq(x) piechart(x)"},{"path":"/reference/polyfreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency polygon Graph — polyfreq","title":"Frequency polygon Graph — polyfreq","text":"Generic function plots frequency polygon curve.","code":""},{"path":"/reference/polyfreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency polygon Graph — polyfreq","text":"","code":"polyfreq(x, ...)"},{"path":"/reference/polyfreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency polygon Graph — polyfreq","text":"x R object (list) class leem. Use new_leem() function. ... arguments passed methods.","code":""},{"path":"/reference/polyfreq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequency polygon Graph — polyfreq","text":"","code":"# Example 1 library(leem) rnorm(36, 100, 50) |> new_leem(variable = \"continuous\") |> tabfreq() |> polyfreq()"},{"path":"/reference/polyfreq.leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency polygon Graph — polyfreq.leem","title":"Frequency polygon Graph — polyfreq.leem","text":"Plot frequency polygon curve.","code":""},{"path":"/reference/polyfreq.leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency polygon Graph — polyfreq.leem","text":"","code":"# S3 method for class 'leem' polyfreq(   x,   freq = \"a\",   type = \"b\",   bars = TRUE,   bg = TRUE,   main = NULL,   xlab = NULL,   ylab = NULL,   grids = grid(col = \"white\"),   bgcol = \"gray\",   bgborder = NA,   barcol = \"yellow\",   barborder = \"gray\",   lpcol = \"black\",   lwd = 2,   pch = 19,   lty = 2,   ... )"},{"path":"/reference/polyfreq.leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency polygon Graph — polyfreq.leem","text":"x R object (list) class leem. Use new_leem() function. freq Character argument. Type frequency options: \"\" (absolute default), \"r\" relative \"p\" percentage. type Type plot. default type = \"b\", .e., line points. See graphical parameter details. bars Logical argument. Default FALSE. bars = TRUE, histogram inserted plot. bg Logical argument. Default TRUE, displays background, bg = FALSE otherwise. main Insert plot title.  default NULL. xlab Insert title x-axis graphic label. default NULL. ylab Insert title y-axis graphic label. default NULL. grids Insert grids plot. default grid(col = \"white\"). bgcol Insert background color. argument valid bg = TRUE. default bgcol=\"gray\". bgborder Insert background border color. argument valid bg = TRUE. default bgborder = NA. barcol Insert barplot color. default barcol = \"yellow\". argument valid bars = TRUE. barborder Insert barplot border color. argument valid bars = TRUE. default barborder = \"gray\". lpcol Type line color. default lpcol = \"black\". lwd numeric argument. line width. default  lwd = 2. pch Type point. default  pch = 19. lty Type line. default  lty = 2. ... arguments passed methods.","code":""},{"path":"/reference/polyfreq.leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequency polygon Graph — polyfreq.leem","text":"","code":"# Example 1 library(leem) rnorm(36, 100, 50) |> new_leem(variable = \"continuous\") |> tabfreq() |> polyfreq()"},{"path":"/reference/probnormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Undertanding the probability of the normal distribution — probnormal","title":"Undertanding the probability of the normal distribution — probnormal","text":"Using graphical visualization, possible understand probabilities involved normal distribution.","code":""},{"path":"/reference/probnormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undertanding the probability of the normal distribution — probnormal","text":"","code":"probnormal(   a = 1,   b = 2,   col = \"lightblue\",   mean = 0,   sd = 1,   type = 1,   rounding = 4,   zang = 0,   xang = 0 )"},{"path":"/reference/probnormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undertanding the probability of the normal distribution — probnormal","text":"lower limit. default 1. b upper limit. default 2, b must greater . col plot color. default col = \"lightblue\". mean parameter. default 0. sd parameter. default 1. type type visualization probability region plot. Default 1, others: 2, 3, 4, 5, 6. See Details. rounding Numerical object. Rounds values first argument specified number decimal places (default 4). zang Angle values Z-axis. Default zang = 0. xang Angle values X-axis. Default xang = 0.","code":""},{"path":"/reference/probnormal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Undertanding the probability of the normal distribution — probnormal","text":"type = 1,2: b must greater mean; type = 3,4: b must less mean; type = 5,6: b can real value.","code":""},{"path":"/reference/probnormal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Undertanding the probability of the normal distribution — probnormal","text":"","code":"if (FALSE) { # \\dontrun{ probnormal(type = 2) probnormal(-1, 0, type = 3) probnormal(-1, 0, type = 4) probnormal(-1, 0, type = 5) probnormal(-1, 2, type = 5) probnormal(1, 2, type = 5) probnormal(1, 2, type = 6) } # }"},{"path":"/reference/propofnormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Properties of the normal distribution — propofnormal","title":"Properties of the normal distribution — propofnormal","text":"Graphically possible observe properties normal distribution","code":""},{"path":"/reference/propofnormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properties of the normal distribution — propofnormal","text":"","code":"propofnormal(col = \"lightblue2\", type = 1)"},{"path":"/reference/propofnormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Properties of the normal distribution — propofnormal","text":"col color type. type numerical. Type properties. Options: 1, 2, 3, 4 5. Default code = 1.","code":""},{"path":"/reference/sdev.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Deviation — sdev","title":"Standard Deviation — sdev","text":"Compute sample standard deviation","code":""},{"path":"/reference/sdev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Deviation — sdev","text":"","code":"sdev(x, rounding = 2, na.rm = FALSE, details = FALSE, grouped = TRUE)"},{"path":"/reference/sdev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Deviation — sdev","text":"x R object (list) class leem. Use new_leem() function. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). na.rm logical value indicating whether NA values stripped computation proceeds. details Logical object. Details data (default FALSE). grouped Logical object. Determines whether measure position result based grouped data (default TRUE).","code":""},{"path":"/reference/sdev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Deviation — sdev","text":"","code":"# Example 1: Poisson data rpois(30, 2.5) |>   new_leem() |>   sdev() #> [1] 1.41 # Example 2: Normal data rnorm(50, 100, 2.5) |>   new_leem(variable = 2) |>   sdev(grouped = FALSE) #> [1] 2.75"},{"path":"/reference/showboxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Undertanding a box plot — showboxplot","title":"Undertanding a box plot — showboxplot","text":"Detailing box plot, showing main information contained type graph","code":""},{"path":"/reference/showboxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undertanding a box plot — showboxplot","text":"","code":"showboxplot(horizontal = FALSE, col = rgb(0, 175, 239, maxColorValue = 255))"},{"path":"/reference/showboxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undertanding a box plot — showboxplot","text":"horizontal Logical argument indicating boxplots horizontal; default FALSE means vertical boxes. col Character vector. Default col = rgb(0, 175, 239, maxColorValue = 255).","code":""},{"path":"/reference/showboxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Undertanding a box plot — showboxplot","text":"","code":"library(leem) # Example 1 showboxplot()"},{"path":"/reference/showcdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution Function Properties — showcdf","title":"Distribution Function Properties — showcdf","text":"Graphic presentation properties distribution function","code":""},{"path":"/reference/showcdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution Function Properties — showcdf","text":"","code":"showcdf(variable = \"discrete\", prop = NULL)"},{"path":"/reference/showcdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution Function Properties — showcdf","text":"variable Variabe type. Defaults variable = \"discrete\". options : discrete \"1\" continuous \"2\". prop Properties distribution function. See Details.","code":""},{"path":"/reference/showcdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distribution Function Properties — showcdf","text":"prop = 1: \\(\\lim_{x\\rightarrow\\infty}F_X(x)=1\\) \\(\\lim_{x\\rightarrow -\\infty}F_X(x)=0\\); prop = 2: \\(F_X(x)\\leq F_X(y), ~ x\\leq y~\\forall x,y \\\\mathbb{R}\\); prop = 3: \\(\\lim_{x_n\\downarrow x}F_X(x_n)\\downarrow F_X(x)\\).","code":""},{"path":"/reference/showcdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution Function Properties — showcdf","text":"","code":"library(leem) # Example 1 showcdf()"},{"path":"/reference/showci.html","id":null,"dir":"Reference","previous_headings":"","what":"Understanding the Confiance Indice — showci","title":"Understanding the Confiance Indice — showci","text":"Detailing confiance indice plot, showing main information contained type graph.","code":""},{"path":"/reference/showci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Understanding the Confiance Indice — showci","text":"","code":"showci(dist = \"normal\", ci = \"two.sided\", main = NULL)"},{"path":"/reference/showci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Understanding the Confiance Indice — showci","text":"dist Parameter indicate distribution graphic, fixed now. ci Parameter indicate region confiance indice. main Parameter indicate title graphic.","code":""},{"path":"/reference/showci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Understanding the Confiance Indice — showci","text":"","code":"library(leem) # Example 1 showci()"},{"path":"/reference/showkur.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of interpretation about Kurtosis — showkur","title":"Plot of interpretation about Kurtosis — showkur","text":"showkur Interpretation kutosis","code":""},{"path":"/reference/showkur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of interpretation about Kurtosis — showkur","text":"","code":"showkur()"},{"path":"/reference/showkur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of interpretation about Kurtosis — showkur","text":"showkur returns plot kurtosis characteristics.","code":""},{"path":"/reference/showkur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of interpretation about Kurtosis — showkur","text":"","code":"# Loading package library(leem) if (FALSE) { # \\dontrun{ showkur() } # }"},{"path":"/reference/showpar.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpretation of location and scale parameters — showpar","title":"Interpretation of location and scale parameters — showpar","text":"showpar Function exemplifies interpretation location scale parameters","code":""},{"path":"/reference/showpar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpretation of location and scale parameters — showpar","text":"","code":"showpar(gui = \"rstudio\")"},{"path":"/reference/showpar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpretation of location and scale parameters — showpar","text":"gui character argument. options : \"rstudio\" (default) \"tcltk\".","code":""},{"path":"/reference/showpar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpretation of location and scale parameters — showpar","text":"showpar returns interactive plot.","code":""},{"path":"/reference/showpar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interpretation of location and scale parameters — showpar","text":"result showpar() call interactively present plot normal distribution showing behavior location scale parameters via RStudio. showpar(gui = \"tcltk\") result displayed tcltk interface.","code":""},{"path":"/reference/showpar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpretation of location and scale parameters — showpar","text":"","code":"# Loading package library(leem) if (FALSE) { # \\dontrun{ showpar() } # }"},{"path":"/reference/showskew.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of interpretation about skewsness — showskew","title":"Plot of interpretation about skewsness — showskew","text":"showskew Interpretation asymmetry based frequency distributions","code":""},{"path":"/reference/showskew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of interpretation about skewsness — showskew","text":"","code":"showskew(mpos = FALSE)"},{"path":"/reference/showskew.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of interpretation about skewsness — showskew","text":"mpos Logical. shows measures position (default FALSE).","code":""},{"path":"/reference/showskew.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of interpretation about skewsness — showskew","text":"","code":"# Loading package library(leem) if (FALSE) { # \\dontrun{ showskew() } # }"},{"path":"/reference/showtabnormal.html","id":null,"dir":"Reference","previous_headings":"","what":"showtabnormal — showtabnormal","title":"showtabnormal — showtabnormal","text":"Detailing Ztable, showing main information contained type table.","code":""},{"path":"/reference/showtabnormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"showtabnormal — showtabnormal","text":"","code":"showtabnormal(z)"},{"path":"/reference/showtabnormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"showtabnormal — showtabnormal","text":"z Parameter lacate z value table; default NULL means error insert number.","code":""},{"path":"/reference/showtabnormal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"showtabnormal — showtabnormal","text":"","code":"library(leem) # Example 1 showtabnormal(1)"},{"path":"/reference/skewness.html","id":null,"dir":"Reference","previous_headings":"","what":"Skewness value — skewness","title":"Skewness value — skewness","text":"Compute skewness","code":""},{"path":"/reference/skewness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skewness value — skewness","text":"","code":"skewness(   x,   type = \"pearson\",   rounding = 2,   na.rm = FALSE,   details = FALSE,   grouped = TRUE )"},{"path":"/reference/skewness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skewness value — skewness","text":"x R object (list) class leem. Use new_leem() function. type character. methodology addressed. now, \"pearson\" option (default). rounding Numerical object. Rounds values first argument specified number decimal places (default 2). na.rm logical value indicating whether NA values stripped computation proceeds. details Logical object. Details data (default FALSE). grouped Logical object. Determines whether measure position result based grouped data (default TRUE).","code":""},{"path":"/reference/skewness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skewness value — skewness","text":"","code":"# Example 1: Poisson data rpois(30, 2.5) |>   new_leem() |>   skewness() #> [1] 0.64 # Example 2: Normal data rnorm(50, 100, 2.5) |>   new_leem(variable = 2) |>   skewness(grouped = TRUE) #> [1] -0.15"},{"path":"/reference/stickchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Stick chart — stickchart","title":"Stick chart — stickchart","text":"Stick chart discrete data","code":""},{"path":"/reference/stickchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stick chart — stickchart","text":"","code":"stickchart(   x,   freq = \"a\",   bg = TRUE,   main = NULL,   xlab = NULL,   ylab = NULL,   grids = grid(col = \"white\"),   bgcol = \"gray\",   bgborder = NA,   posx1 = 0,   posx2 = 0,   xang = 0,   labels = NULL,   lcol = \"black\",   pcol = lcol,   pty = 19,   pwd = 3,   lty = 1,   lwd = 2,   ... )"},{"path":"/reference/stickchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stick chart — stickchart","text":"x R object (list) class leem. Use new_leem() function. freq Character argument. Type frequency options: \"\" (absolute default), \"r\" relative \"p\" percentage. bg Logical argument. Default TRUE, displays background, bg = FALSE otherwise. main Insert plot title. default NULL. xlab Insert title x-axis graphic label. default NULL. ylab Insert title y-axis graphic label. default NULL. grids Insert grids plot. default grid(col = \"white\"). bgcol Insert background color. argument valid bg = TRUE. default bgcol=\"gray\". bgborder Insert background border color. argument valid bg = TRUE. default bgborder = NA. posx1 Numeric argument.Distance labels (horizontal) relation x axis. posx2 Numeric argument.Distance labels (vertical) relation x axis. xang Numeric argument.Angle labels relation x axis labels Character argument. Labels name vector. lcol Line color. default lcol = \"black\". pcol Point color. default pcol = lcol. pty Point type. default  pty = 19. pwd Point width. default  pwd = 3. lty Line type. default  lty = 2. lwd Line width. default  lwd = 2. ... arguments passed methods.","code":""},{"path":"/reference/stickchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stick chart — stickchart","text":"result stickchart() x object.","code":""},{"path":"/reference/stickchart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stick chart — stickchart","text":"","code":"library(leem) # Example 1 rbinom(30, 10, 0.4) |>   new_leem() |>   tabfreq() |>   stickchart()  # Example 2 school <- rep(c(\"high\", \"university\", \"basic\"), 3:5) sample(school, 30, TRUE) |>   new_leem() |>   tabfreq(ordered = c(\"basic\", \"high\", \"university\")) |>   stickchart(xang = 15, posx2 = -0.5)"},{"path":"/reference/tabfreq.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency distribution table — tabfreq","title":"Frequency distribution table — tabfreq","text":"Generic function allows tabulate continuous categorical data (quantitative qualitative) frequency distribution. Depending nature data, can grouped class ranges .","code":""},{"path":"/reference/tabfreq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency distribution table — tabfreq","text":"","code":"tabfreq(data, ...)"},{"path":"/reference/tabfreq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency distribution table — tabfreq","text":"data R object (data structure vector) class leem. Use new_leem() function. ... arguments passed methods.","code":""},{"path":"/reference/tabfreq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frequency distribution table — tabfreq","text":"result tabfreq() list. list two elements: table statistics. first data frequency table, second represents useful statistics methods leem class.","code":""},{"path":"/reference/tabfreq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequency distribution table — tabfreq","text":"","code":"# Example 1 library(leem) x <- rbinom(36, 10, 0.6) x <- new_leem(x, variable = \"discrete\") tabfreq(x) #>  #> Table of frequency  #> Type of variable: discrete #>  #>   Groups Fi   Fr Fac1 Fac2 Fp  Fac1p  Fac2p #> 1      2  4 0.11    4   36 11  11.11 100.00 #> 2      3  2 0.06    6   32  6  16.67  88.89 #> 3      4  6 0.17   12   30 17  33.33  83.33 #> 4      5  7 0.19   19   24 19  52.78  66.67 #> 5      6  6 0.17   25   17 17  69.44  47.22 #> 6      7  3 0.08   28   11  8  77.78  30.56 #> 7      8  5 0.14   33    8 14  91.67  22.22 #> 8      9  3 0.08   36    3  8 100.00   8.33 #> ==============================================  #> Groups: Discretized grouping  #> Fi: Absolute frequency  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>   # Example 2 (Pipe operator) rnorm(36, 100, 4) |>   new_leem(variable = \"continuous\") |> tabfreq() #>  #> Table of frequency  #> Type of variable: continuous #>  #>               Classes Fi     PM   Fr Fac1 Fac2 Fp  Fac1p  Fac2p #> 1    92.8 |---  96.18  4  94.49 0.11    4   36 11  11.11 100.00 #> 2   96.18 |---  99.56 11  97.87 0.31   15   32 31  41.67  88.89 #> 3  99.56 |---  102.94 12 101.25 0.33   27   21 33  75.00  58.33 #> 4 102.94 |---  106.32  5 104.63 0.14   32    9 14  88.89  25.00 #> 5  106.32 |---  109.7  3 108.01 0.08   35    4  8  97.22  11.11 #> 6  109.7 |---  113.08  1 111.39 0.03   36    1  3 100.00   2.78 #>  #> ==============================================  #> Classes: Grouping of classes  #> Fi: Absolute frequency  #> PM: Midpoint  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>   # Example 3 x <- rbinom(36, 10, 0.6) # Constructor (object of leem class) x <- new_leem(x, variable = \"discrete\") tab <- tabfreq(x) # Details tab$table #>   Groups Fi   Fr Fac1 Fac2 Fp  Fac1p  Fac2p #> 1      4  4 0.11    4   36 11  11.11 100.00 #> 2      5  9 0.25   13   32 25  36.11  88.89 #> 3      6  8 0.22   21   23 22  58.33  63.89 #> 4      7  7 0.19   28   15 19  77.78  41.67 #> 5      8  7 0.19   35    8 19  97.22  22.22 #> 6      9  1 0.03   36    1  3 100.00   2.78 tab$statistics #> $ngroups #> [1] 6 #>  #> $minv #> [1] 4 #>  #> $maxv #> [1] 9 #>  #> $raw_data #>  [1] 6 5 7 6 8 6 6 4 5 7 6 8 6 8 7 7 5 9 5 8 5 8 6 8 4 4 5 6 5 4 7 5 7 8 7 5 #>   # Example 3 - ordered categories (\"d\",\"a\", \"b\", \"c\") w <- rep(letters[1:4], 1:4) w |> new_leem(variable = \"discrete\") |> tabfreq(ordered = c(\"d\",\"a\", \"b\", \"c\")) #>  #> Table of frequency  #> Type of variable: discrete #>  #>   Groups Fi  Fr Fac1 Fac2 Fp Fac1p Fac2p #> 1      d  4 0.4    4   10 40    40   100 #> 2      a  1 0.1    5    6 10    50    60 #> 3      b  2 0.2    7    5 20    70    50 #> 4      c  3 0.3   10    3 30   100    30 #> ==============================================  #> Groups: Discretized grouping  #> Fi: Absolute frequency  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>"},{"path":"/reference/tabfreq.leem.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency distribution table — tabfreq.leem","title":"Frequency distribution table — tabfreq.leem","text":"Allows tabulate continuous categorical data (quantitative qualitative) frequency distribution. Depending nature data, can grouped class ranges .","code":""},{"path":"/reference/tabfreq.leem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency distribution table — tabfreq.leem","text":"","code":"# S3 method for class 'leem' tabfreq(   data,   k = NULL,   na.rm = FALSE,   ordered = NULL,   namereduction = TRUE,   ... )"},{"path":"/reference/tabfreq.leem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency distribution table — tabfreq.leem","text":"data R object (data structure vector) class leem. Use new_leem() function. k Number classes. Default NULL. na.rm logical evaluating TRUE FALSE indicating whether NA values stripped computation proceeds. ordered Ordered vector length elements data object. Default NULL. namereduction Logical argument. TRUE (default), group names reduzed 10 characters. FALSE, otherwise. ... arguments passed methods.","code":""},{"path":"/reference/tabfreq.leem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frequency distribution table — tabfreq.leem","text":"result tabfreq() list. list two elements: table statistics. first data frequency table, second represents useful statistics methods leem class.","code":""},{"path":"/reference/tabfreq.leem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequency distribution table — tabfreq.leem","text":"","code":"# Example 1 library(leem) x <- rbinom(36, 10, 0.6) x <- new_leem(x, variable = \"discrete\") tabfreq(x) #>  #> Table of frequency  #> Type of variable: discrete #>  #>   Groups Fi   Fr Fac1 Fac2 Fp  Fac1p  Fac2p #> 1      1  1 0.03    1   36  3   2.78 100.00 #> 2      2  1 0.03    2   35  3   5.56  97.22 #> 3      3  1 0.03    3   34  3   8.33  94.44 #> 4      4  4 0.11    7   33 11  19.44  91.67 #> 5      5  5 0.14   12   29 14  33.33  80.56 #> 6      6  7 0.19   19   24 19  52.78  66.67 #> 7      7  7 0.19   26   17 19  72.22  47.22 #> 8      8  8 0.22   34   10 22  94.44  27.78 #> 9      9  2 0.06   36    2  6 100.00   5.56 #> ==============================================  #> Groups: Discretized grouping  #> Fi: Absolute frequency  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>   # Example 2 (Pipe operator) rnorm(36, 100, 4) |>   new_leem(variable = \"continuous\") |> tabfreq() #>  #> Table of frequency  #> Type of variable: continuous #>  #>               Classes Fi     PM   Fr Fac1 Fac2 Fp  Fac1p  Fac2p #> 1   89.54 |---  93.14  3  91.34 0.08    3   36  8   8.33 100.00 #> 2   93.14 |---  96.74  2  94.94 0.06    5   33  6  13.89  91.67 #> 3  96.74 |---  100.34 17  98.54 0.47   22   31 47  61.11  86.11 #> 4 100.34 |---  103.94  6 102.14 0.17   28   14 17  77.78  38.89 #> 5 103.94 |---  107.54  6 105.74 0.17   34    8 17  94.44  22.22 #> 6 107.54 |---  111.14  2 109.34 0.06   36    2  6 100.00   5.56 #>  #> ==============================================  #> Classes: Grouping of classes  #> Fi: Absolute frequency  #> PM: Midpoint  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>   # Example 3 x <- rbinom(36, 10, 0.6) # Constructor (object of leem class) x <- new_leem(x, variable = \"discrete\") tab <- tabfreq(x) # Details tab$table #>   Groups Fi   Fr Fac1 Fac2 Fp  Fac1p  Fac2p #> 1      1  2 0.06    2   36  6   5.56 100.00 #> 2      2  2 0.06    4   34  6  11.11  94.44 #> 3      3  2 0.06    6   32  6  16.67  88.89 #> 4      4  2 0.06    8   30  6  22.22  83.33 #> 5      5  7 0.19   15   28 19  41.67  77.78 #> 6      6 10 0.28   25   21 28  69.44  58.33 #> 7      7  7 0.19   32   11 19  88.89  30.56 #> 8      9  3 0.08   35    4  8  97.22  11.11 #> 9     10  1 0.03   36    1  3 100.00   2.78 tab$statistics #> $ngroups #> [1] 9 #>  #> $minv #> [1] 1 #>  #> $maxv #> [1] 10 #>  #> $raw_data #>  [1]  5  5  3  5  1  9  6  6  6  4  1  5  3  6  5  9  5  6  9  7  2  6  7  7  6 #> [26]  7 10  6  5  2  6  4  6  7  7  7 #>   # Example 3 - ordered categories (\"d\",\"a\", \"b\", \"c\") w <- rep(letters[1:4], 1:4) w |> new_leem(variable = \"discrete\") |> tabfreq(ordered = c(\"d\",\"a\", \"b\", \"c\")) #>  #> Table of frequency  #> Type of variable: discrete #>  #>   Groups Fi  Fr Fac1 Fac2 Fp Fac1p Fac2p #> 1      d  4 0.4    4   10 40    40   100 #> 2      a  1 0.1    5    6 10    50    60 #> 3      b  2 0.2    7    5 20    70    50 #> 4      c  3 0.3   10    3 30   100    30 #> ==============================================  #> Groups: Discretized grouping  #> Fi: Absolute frequency  #> Fr: Relative frequency  #> Fac1: Cumulative frequency (below)  #> Fac2: Cumulative frequency (above)  #> Fp: Percentage frequency  #> Fac1p: Cumulative percentage frequency (below)  #> Fac2p: Cumulative percentage frequency (above)  #>"},{"path":"/reference/th.html","id":null,"dir":"Reference","previous_headings":"","what":"Test of hypothesis — th","title":"Test of hypothesis — th","text":"Performs hypothesis testing various parameters one populations","code":""},{"path":"/reference/th.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test of hypothesis — th","text":"","code":"th(   x,   y = NULL,   test = \"ztest\",   h0,   prop = FALSE,   delta = 0,   p,   pa,   alternative = c(\"two.sided\", \"L\", \"less\", \"greater\", \"G\"),   alpha = 0.05,   exact = TRUE,   correct = FALSE,   paired = FALSE,   plot = FALSE,   ... )"},{"path":"/reference/th.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test of hypothesis — th","text":"x R object. See details. y optional (non-empty) numeric vector data values. test character value. options : \"ttest\", \"ztest\", \"ptest\", \"chitest\", \"ftest\", \"anova\", \"friedman\", \"kruskal\", \"mann whitney\". h0 numeric value. hypothesized parameter. prop logical indicating whether want use proportion test . Default prop=FALSE. alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". can specify just initial letter. alpha significance level test exact logical indicating whether want use exact test . Default exact=TRUE. correct logical indicating whether Yates' continuity correction applied possible. argument must used exact = FALSE. paired logical indicating whether want paired t-test. Valid test=\"ttest\". plot logical indicating whether want graph indicating regions rejection null hypothesis, well test decision.","code":""},{"path":"/reference/th.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test of hypothesis — th","text":"","code":"# Null hypothesis nullhyp <- h0 <- 90 # Simulation set.seed(10) data <- rnorm(30, 100, 10) # Test of hypothesis th(data, h0 = h0, sd = 10, plot = TRUE) #> Warning: font metrics unknown for character 0x0a in encoding latin1 #> Warning: font metrics unknown for character 0x0a in encoding latin1  #>  #>  #>    One Sample z-test (Two-sided test)  #>   #> Step 1: Hypothesis  #>  H0: mu = 90  #>  H1: mu != 90  #>  #> Step 2: Significance level  #>  alpha = 0.05  #>  #> Step 3: Rule of decision  #>    If |ztest| > |ztab| => Reject H0!  #>    ztest - test statistic; ztab - critical point  #> So...  #> As ztest = 3.59 > |ztab =1.96 then reject H0!  #> Otherwise...  #> As p-value =  0.00033  < alpha =  0.05   then reject H0!  #>  #> Step 4: Conclusion  #> We observed by the Z Test that the null hypothesis was rejected, at the significance level of   5 % probability"},{"path":"/reference/variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance value — variance","title":"Variance value — variance","text":"Compute sample variance","code":""},{"path":"/reference/variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance value — variance","text":"","code":"variance(x, rounding = 2, na.rm = FALSE, details = FALSE, grouped = TRUE)"},{"path":"/reference/variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance value — variance","text":"x R object (list) class leem. Use new_leem() function. rounding Numerical object. Rounds values first argument specified number decimal places (default 2). na.rm logical value indicating whether NA values stripped computation proceeds. details Logical object. Details data (default FALSE). grouped Logical object. Determines whether measure position result based grouped data (default TRUE).","code":""},{"path":"/reference/variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance value — variance","text":"","code":"# Example 1: Poisson data rpois(30, 2.5) |>   new_leem() |>   variance() #> [1] 2.13 # Example 2: Normal data rnorm(50, 100, 2.5) |>   new_leem(variable = 2) |>   variance(grouped = FALSE) #> [1] 5.2"},{"path":"/news/index.html","id":"leem-010","dir":"Changelog","previous_headings":"","what":"leem 0.1.0","title":"leem 0.1.0","text":"CRAN release: 2022-03-02 Start GUI development","code":""},{"path":"/news/index.html","id":"leem-020","dir":"Changelog","previous_headings":"","what":"leem 0.2.0","title":"leem 0.2.0","text":"CRAN release: 2025-03-08 help continuous numerical ordered ordered Pendency: change variable names Help document Translated labels, title, … Boxplot help continuous numerical categorical help numerical ordered ordered coerced histogram help continuous numerical ordered ordered help continuous numerical ordered ordered help continuous numerical ordered ordered help continuous numerical ordered ordered help grouped data raw data Insert plots: insert() help grouped data raw data Insert plots: insert() Mode: mfreq() help grouped data raw data Insert plots: insert() Output: print.leem() lower.tail = T/F regions lower.tail = T/F regions additional_distributions.R lower.tail = T/F regions lower.tail = T/F regions lower.tail = T/F regions lower.tail = T/F regions lower.tail = T/F regions lower.tail = T/F regions lower.tail = T/F regions lower.tail = T/F regions lower.tail = T/F lower.tail = T/F additional_distributions.R lower.tail = T/F lower.tail = T/F lower.tail = T/F lower.tail = T/F lower.tail = T/F lower.tail = T/F lower.tail = T/F lower.tail = T/F # leem 0.3.0 Bugs fixed plots, longer needing use tabfreq() function directly; one population two population test proportion print.leem() two.sided less greater one population two population test proportion print.leem() two.sided less greater","code":""},{"path":"/news/index.html","id":"leem-100","dir":"Changelog","previous_headings":"","what":"leem 1.0.0","title":"leem 1.0.0","text":"Gradient colors graphics take account weight frequencies Insert shadows bars, giving 3d appearance Insert details argument P function print expected variance values said distributions","code":""}]
